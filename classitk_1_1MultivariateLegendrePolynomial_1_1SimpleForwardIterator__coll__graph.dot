digraph "itk::MultivariateLegendrePolynomial::SimpleForwardIterator"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="itk::MultivariateLegendre\lPolynomial::SimpleForwardIterator",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Iterator which only supports forward iteration and Begin(), IsAtEnd(), and Get() method which work ju..."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_MultivariateLegendrePolynomial" ,fontname="Helvetica"];
  Node2 [label="itk::MultivariateLegendre\lPolynomial",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1MultivariateLegendrePolynomial.html",tooltip="2D and 3D multivariate Legendre Polynomial"];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_DomainSize" ,fontname="Helvetica"];
  Node3 [label="std::vector\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node4 [label="T",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_CachedXCoef\nm_CachedYCoef\nm_CachedZCoef\nm_CoefficientArray\nm_NormFactor" ,fontname="Helvetica"];
  Node5 [label="std::vector\< double \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_DomainSize\nm_Index" ,fontname="Helvetica"];
}
