digraph "itk::SegmentationLevelSetImageFilter&lt; TInputImage, TFeatureImage, TOutputPixelType &gt;"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="itk::SegmentationLevelSet\lImageFilter\< TInputImage,\l TFeatureImage, TOutputPixelType \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A base class which defines the API for implementing a special class of image segmentation filters usi..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="itk::SparseFieldLevelSet\lImageFilter\< TInputImage,\l Image\< float, TInputImage\l::ImageDimension \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SparseFieldLevelSetImageFilter.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="itk::FiniteDifferenceImage\lFilter\< TInputImage, Image\l\< float, TInputImage::ImageDimension \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1FiniteDifferenceImageFilter.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="itk::InPlaceImageFilter\l\< TInputImage, Image\<\l float, TInputImage::ImageDimension \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1InPlaceImageFilter.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="itk::ImageToImageFilter\l\< TInputImage, Image\<\l float, TInputImage::ImageDimension \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageToImageFilter.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="itk::ImageSource\< Image\l\< float, TInputImage::\lImageDimension \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageSource.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="itk::ProcessObject",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ProcessObject.html",tooltip="The base class for all process objects (source, filters, mappers) in the Insight data processing pipe..."];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="itk::Object",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Object.html",tooltip="Base class for most ITK classes."];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="itk::LightObject",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LightObject.html",tooltip="Light weight base class for most itk classes."];
  Node10 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ReferenceCount" ,fontname="Helvetica"];
  Node10 [label="std::atomic\< int \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_MTime" ,fontname="Helvetica"];
  Node11 [label="itk::TimeStamp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1TimeStamp.html",tooltip="Generate a unique, increasing time value."];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_GlobalTimeStamp" ,fontname="Helvetica"];
  Node12 [label="std::atomic\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node13 [label="T",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_SubjectImplementation" ,fontname="Helvetica"];
  Node14 [label="std::unique_ptr\< Subject\lImplementation \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node15 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_MetaDataDictionary" ,fontname="Helvetica"];
  Node15 [label="std::unique_ptr\< itk\l::MetaDataDictionary \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node16 [label="itk::MetaDataDictionary",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1MetaDataDictionary.html",tooltip="Provides a mechanism for storing a collection of arbitrary data types."];
  Node17 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Dictionary" ,fontname="Helvetica"];
  Node17 [label="std::shared_ptr\< MetaData\lDictionaryMapType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node18 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node18 [label="std::map\< K, T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node19 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node19 [label="K",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node20 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ObjectName" ,fontname="Helvetica"];
  Node20 [label="std::string",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="std::basic_string\<\l Char \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_OutputInformationMTime" ,fontname="Helvetica"];
  Node22 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Inputs\nm_Outputs" ,fontname="Helvetica"];
  Node22 [label="std::map\< DataObjectIdentifier\lType, DataObjectPointer \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node20 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node23 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node23 [label="itk::SmartPointer\<\l Self \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SmartPointer.html",tooltip=" "];
  Node24 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_IndexedInputs\nm_IndexedOutputs" ,fontname="Helvetica"];
  Node24 [label="std::vector\< DataObjectPointer\lMap::iterator \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node25 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node25 [label="std::map\< K, T \>::iterator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node26 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_CachedInputReleaseData\lFlags" ,fontname="Helvetica"];
  Node26 [label="std::map\< DataObjectIdentifier\lType, bool \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node20 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node27 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_RequiredInputNames" ,fontname="Helvetica"];
  Node27 [label="std::set\< DataObjectIdentifier\lType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node20 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys" ,fontname="Helvetica"];
  Node28 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Progress" ,fontname="Helvetica"];
  Node28 [label="std::atomic\< uint32_t \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node29 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ,fontname="Helvetica"];
  Node29 [label="uint32_t",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node30 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_MultiThreader" ,fontname="Helvetica"];
  Node30 [label="itk::SmartPointer\<\l itk::MultiThreaderBase \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SmartPointer.html",tooltip=" "];
  Node31 -> Node6 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="itk::ImageSourceCommon",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structitk_1_1ImageSourceCommon.html",tooltip="Secondary base class of ImageSource common between templates."];
  Node32 -> Node5 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="itk::ImageToImageFilterCommon",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageToImageFilterCommon.html",tooltip="Secondary base class of ImageToImageFilter common between templates."];
  Node33 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_DifferenceFunction" ,fontname="Helvetica"];
  Node33 [label="itk::SmartPointer\<\l TObjectType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SmartPointer.html",tooltip="Implements transparent reference counting."];
  Node34 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_NeighborList" ,fontname="Helvetica"];
  Node34 [label="itk::SparseFieldCityBlock\lNeighborList\< itk::Neighborhood\lIterator\< OutputImageType \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SparseFieldCityBlockNeighborList.html",tooltip=" "];
  Node35 -> Node34 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ArrayIndex" ,fontname="Helvetica"];
  Node35 [label="std::vector\< unsigned\l int \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node36 -> Node34 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_NeighborhoodOffset" ,fontname="Helvetica"];
  Node36 [label="std::vector\< OffsetType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node37 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Layers" ,fontname="Helvetica"];
  Node37 [label="std::vector\< LayerPointer\lType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node33 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_LayerNodeStore\nm_StatusImage" ,fontname="Helvetica"];
  Node38 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_UpdateBuffer" ,fontname="Helvetica"];
  Node38 [label="std::vector\< ValueType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node39 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_SegmentationFunction" ,fontname="Helvetica"];
  Node39 [label="itk::SegmentationLevelSet\lFunction\< TImageType, TFeature\lImageType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SegmentationLevelSetFunction.html",tooltip=" "];
  Node40 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="itk::LevelSetFunction\l\< TImageType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LevelSetFunction.html",tooltip="The LevelSetFunction class is a generic function object which can be used to create a level set metho..."];
  Node41 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="itk::FiniteDifferenceFunction\l\< TImageType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1FiniteDifferenceFunction.html",tooltip=" "];
  Node9 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 -> Node41 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Radius" ,fontname="Helvetica"];
  Node42 [label="itk::ConstNeighborhoodIterator\l\< TImageType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ConstNeighborhoodIterator.html",tooltip=" "];
  Node43 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="itk::Neighborhood\<\l TImage::InternalPixelType\l *, TImage::ImageDimension \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Neighborhood.html",tooltip=" "];
  Node44 -> Node43 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Radius\nm_Size" ,fontname="Helvetica"];
  Node44 [label="itk::Size\< VDimension \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structitk_1_1Size.html",tooltip=" "];
  Node45 -> Node43 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_DataBuffer" ,fontname="Helvetica"];
  Node45 [label="itk::NeighborhoodAllocator\l\< TImage::InternalPixelType * \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1NeighborhoodAllocator.html",tooltip=" "];
  Node46 -> Node45 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Data" ,fontname="Helvetica"];
  Node46 [label="std::unique_ptr\< TImage\l::InternalPixelType *[]\>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node47 -> Node43 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_OffsetTable" ,fontname="Helvetica"];
  Node47 [label="std::vector\< itk::Offset \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node48 -> Node47 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node48 [label="itk::Offset\< VDimension \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structitk_1_1Offset.html",tooltip="Represent a n-dimensional offset between two n-dimensional indexes of n-dimensional image."];
  Node49 -> Node42 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_BeginIndex\nm_Bound\nm_EndIndex\nm_InnerBoundsHigh\nm_InnerBoundsLow\nm_Loop" ,fontname="Helvetica"];
  Node49 [label="itk::Index\< Self::Dimension \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structitk_1_1Index.html",tooltip=" "];
  Node50 -> Node42 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_InternalBoundaryCondition" ,fontname="Helvetica"];
  Node50 [label="itk::ZeroFluxNeumannBoundary\lCondition\< TImageType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ZeroFluxNeumannBoundaryCondition.html",tooltip=" "];
  Node51 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="itk::ImageBoundaryCondition\l\< TImageType, TImageType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageBoundaryCondition.html",tooltip=" "];
  Node52 -> Node42 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_BoundaryCondition" ,fontname="Helvetica"];
  Node52 [label="itk::ImageBoundaryCondition\l\< ImageType, OutputImageType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageBoundaryCondition.html",tooltip=" "];
  Node53 -> Node40 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_ZeroVectorConstant" ,fontname="Helvetica"];
  Node53 [label="itk::FixedArray\< TValue,\l VLength \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1FixedArray.html",tooltip="Simulate a standard C array with copy semantics."];
  Node33 -> Node39 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_AdvectionImage\nm_Interpolator\nm_VectorInterpolator" ,fontname="Helvetica"];
}
