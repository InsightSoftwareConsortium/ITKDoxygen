digraph "itk::ImageSource&lt; TOutputImage &gt;"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="itk::ImageSource\< TOutput\lImage \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base class for all process objects that output image data."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="itk::ProcessObject",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ProcessObject.html",tooltip="The base class for all process objects (source, filters, mappers) in the Insight data processing pipe..."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="itk::Object",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Object.html",tooltip="Base class for most ITK classes."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="itk::LightObject",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LightObject.html",tooltip="Light weight base class for most itk classes."];
  Node5 -> Node1 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="itk::ImageSourceCommon",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structitk_1_1ImageSourceCommon.html",tooltip="Secondary base class of ImageSource common between templates."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="itk::ImageToImageFilter\l\< TInputImage1, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageToImageFilter.html",tooltip=" "];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="itk::InPlaceImageFilter\l\< TInputImage1, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1InPlaceImageFilter.html",tooltip=" "];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="itk::ImageToImageFilter\l\< TDisplacementField,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageToImageFilter.html",tooltip=" "];
  Node23 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="itk::GridForwardWarpImage\lFilter\< TDisplacementField,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GridForwardWarpImageFilter.html",tooltip="Warps a grid using an input deformation field."];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="itk::ImageToImageFilter\l\< TLabelImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageToImageFilter.html",tooltip=" "];
  Node25 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="itk::InPlaceImageFilter\l\< TLabelImage, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1InPlaceImageFilter.html",tooltip=" "];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="itk::ImageToImageFilter\l\< TFeatureImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageToImageFilter.html",tooltip=" "];
  Node29 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="itk::InPlaceImageFilter\l\< TFeatureImage, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1InPlaceImageFilter.html",tooltip=" "];
  Node1 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="itk::GenerateImageSource\l\< TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GenerateImageSource.html",tooltip="a Base class for image sources which need to have image size, and other meta-data set."];
  Node40 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="itk::GaborImageSource\l\< TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GaborImageSource.html",tooltip="Generate an n-dimensional image of a Gabor filter."];
  Node40 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="itk::GridImageSource\l\< TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GridImageSource.html",tooltip="Generate an n-dimensional image of a grid."];
  Node40 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="itk::ParametricImageSource\l\< TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ParametricImageSource.html",tooltip="Base class for all parametric image sources."];
  Node40 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="itk::PhysicalPointImageSource\l\< TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1PhysicalPointImageSource.html",tooltip="Generate an image of the physical locations of each pixel."];
  Node1 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="itk::ImageFileReader\l\< TOutputImage, ConvertPixel\lTraits \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageFileReader.html",tooltip="Data source that reads image data from a single file."];
  Node1 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="itk::ImageSeriesReader\l\< TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageSeriesReader.html",tooltip="Data source that reads image data from a series of disk files."];
  Node1 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="itk::ImageToImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ImageToImageFilter.html",tooltip="Base class for filters that take an image as input and produce an image as output."];
  Node48 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="itk::AttributeMorphology\lBaseImageFilter\< TInputImage,\l TOutputImage, typename TInputImage\l::SpacingType::ValueType, std::less\l\< TInputImage::PixelType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1AttributeMorphologyBaseImageFilter.html",tooltip=" "];
  Node48 -> Node51 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="itk::AttributeMorphology\lBaseImageFilter\< TInputImage,\l TOutputImage, typename TInputImage\l::SpacingType::ValueType, std::greater\l\< TInputImage::PixelType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1AttributeMorphologyBaseImageFilter.html",tooltip=" "];
  Node48 -> Node53 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="itk::ConnectedComponentImage\lFilter\< TInputImage, TOutputImage,\l TInputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ConnectedComponentImageFilter.html",tooltip=" "];
  Node48 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="itk::CyclicShiftImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1CyclicShiftImageFilter.html",tooltip=" "];
  Node48 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="itk::DiscreteGaussianImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1DiscreteGaussianImageFilter.html",tooltip=" "];
  Node48 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 [label="itk::HistogramThresholdImage\lFilter\< TInputImage, TOutputImage,\l TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1HistogramThresholdImageFilter.html",tooltip=" "];
  Node48 -> Node77 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node77 [label="itk::InPlaceImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1InPlaceImageFilter.html",tooltip=" "];
  Node48 -> Node182 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node182 [label="itk::NeighborhoodOperator\lImageFilter\< TInputImage,\l TOutputImage, typename TOutputImage\l::PixelType \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1NeighborhoodOperatorImageFilter.html",tooltip=" "];
  Node48 -> Node187 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node187 [label="itk::ProjectionImageFilter\l\< TInputImage, TOutputImage,\l Functor::BinaryAccumulator\l\< TInputImage::PixelType, TOutputImage\l::PixelType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ProjectionImageFilter.html",tooltip=" "];
  Node48 -> Node189 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node189 [label="itk::ProjectionImageFilter\l\< TInputImage, TOutputImage,\l Function::BinaryThresholdAccumulator\l\< TInputImage::PixelType, TOutputImage\l::PixelType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ProjectionImageFilter.html",tooltip=" "];
  Node48 -> Node191 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node191 [label="itk::ProjectionImageFilter\l\< TInputImage, TOutputImage,\l Functor::MaximumAccumulator\l\< TInputImage::PixelType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ProjectionImageFilter.html",tooltip=" "];
  Node48 -> Node193 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node193 [label="itk::ProjectionImageFilter\l\< TInputImage, TOutputImage,\l Functor::MeanAccumulator\<\l TInputImage::PixelType, typename\l NumericTraits\< typename TOutputImage\l::PixelType \>::AccumulateType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ProjectionImageFilter.html",tooltip=" "];
  Node48 -> Node195 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node195 [label="itk::ProjectionImageFilter\l\< TInputImage, TOutputImage,\l Functor::MedianAccumulator\l\< TInputImage::PixelType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ProjectionImageFilter.html",tooltip=" "];
  Node48 -> Node197 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node197 [label="itk::ProjectionImageFilter\l\< TInputImage, TOutputImage,\l Functor::MinimumAccumulator\l\< TInputImage::PixelType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ProjectionImageFilter.html",tooltip=" "];
  Node48 -> Node199 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node199 [label="itk::ProjectionImageFilter\l\< TInputImage, TOutputImage,\l Functor::StandardDeviationAccumulator\l\< TInputImage::PixelType, typename\l NumericTraits\< typename TOutputImage\l::PixelType \>::AccumulateType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ProjectionImageFilter.html",tooltip=" "];
  Node48 -> Node201 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node201 [label="itk::ProjectionImageFilter\l\< TInputImage, TOutputImage,\l Functor::SumAccumulator\< TInputImage\l::PixelType, TOutputImage::PixelType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ProjectionImageFilter.html",tooltip=" "];
  Node48 -> Node203 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node203 [label="itk::ReconstructionImage\lFilter\< TInputImage, TOutput\lImage, std::greater\< TOutputImage\l::PixelType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ReconstructionImageFilter.html",tooltip=" "];
  Node48 -> Node205 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node205 [label="itk::ReconstructionImage\lFilter\< TInputImage, TOutput\lImage, std::less\< TOutputImage\l::PixelType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ReconstructionImageFilter.html",tooltip=" "];
  Node48 -> Node207 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node207 [label="itk::ValuedRegionalExtrema\lImageFilter\< TInputImage,\l TOutputImage, std::greater\l\< TInputImage::PixelType \>,\l std::greater\< TOutputImage\l::PixelType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ValuedRegionalExtremaImageFilter.html",tooltip=" "];
  Node48 -> Node209 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node209 [label="itk::ValuedRegionalExtrema\lImageFilter\< TInputImage,\l TOutputImage, std::less\l\< TInputImage::PixelType \>\l, std::less\< TOutputImage::\lPixelType \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ValuedRegionalExtremaImageFilter.html",tooltip=" "];
  Node48 -> Node211 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node211 [label="itk::VoronoiSegmentation\lImageFilterBase\< TInputImage,\l TOutputImage, Image\< unsigned\l char, 2 \> \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1VoronoiSegmentationImageFilterBase.html",tooltip=" "];
  Node48 -> Node213 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node213 [label="itk::AccumulateImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1AccumulateImageFilter.html",tooltip="Implements an accumulation of an image along a selected direction."];
  Node48 -> Node215 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node215 [label="itk::ApproximateSignedDistance\lMapImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ApproximateSignedDistanceMapImageFilter.html",tooltip="Create a map of the approximate signed distance from the boundaries of a binary image."];
  Node48 -> Node216 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node216 [label="itk::AttributeMorphology\lBaseImageFilter\< TInputImage,\l TOutputImage, TAttribute,\l TFunction \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1AttributeMorphologyBaseImageFilter.html",tooltip="Morphological opening by attributes."];
  Node48 -> Node217 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node217 [label="itk::BSplineDecomposition\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1BSplineDecompositionImageFilter.html",tooltip="Calculates the B-Spline coefficients of an image. Spline order may be from 0 to 5."];
  Node48 -> Node218 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node218 [label="itk::BSplineResampleImage\lFilterBase\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1BSplineResampleImageFilterBase.html",tooltip="Uses the \"l2\" spline pyramid implementation of B-Spline Filters to up/down sample an image by a facto..."];
  Node48 -> Node224 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node224 [label="itk::BilateralImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1BilateralImageFilter.html",tooltip="Blurs an image while preserving edges."];
  Node48 -> Node225 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node225 [label="itk::BinShrinkImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1BinShrinkImageFilter.html",tooltip="Reduce the size of an image by an integer factor in each dimension while performing averaging of an i..."];
  Node48 -> Node226 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node226 [label="itk::BinaryMedianImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1BinaryMedianImageFilter.html",tooltip="Applies a version of the median filter optimized for binary images."];
  Node48 -> Node227 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node227 [label="itk::BinaryPruningImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1BinaryPruningImageFilter.html",tooltip="This filter removes \"spurs\" of less than a certain length in the input image."];
  Node48 -> Node228 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node228 [label="itk::BinaryThinningImage\lFilter\< TInputImage, TOutput\lImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1BinaryThinningImageFilter.html",tooltip="This filter computes one-pixel-wide edges of the input image."];
  Node48 -> Node229 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node229 [label="itk::BinomialBlurImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1BinomialBlurImageFilter.html",tooltip="Performs a separable blur on each dimension of an image."];
  Node48 -> Node230 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node230 [label="itk::BoxImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1BoxImageFilter.html",tooltip="A base class for all the filters working on a box neighborhood."];
  Node48 -> Node280 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node280 [label="itk::CannyEdgeDetectionImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1CannyEdgeDetectionImageFilter.html",tooltip="This filter is an implementation of a Canny edge detector for scalar-valued images."];
  Node48 -> Node281 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node281 [label="itk::ClosingByReconstruction\lImageFilter\< TInputImage,\l TOutputImage, TKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ClosingByReconstructionImageFilter.html",tooltip="Closing by reconstruction of an image."];
  Node48 -> Node282 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node282 [label="itk::CollidingFrontsImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1CollidingFrontsImageFilter.html",tooltip="Selects a region of space where two independent fronts run towards each other."];
  Node48 -> Node283 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node283 [label="itk::ConfidenceConnected\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ConfidenceConnectedImageFilter.html",tooltip="Segment pixels with similar statistics using connectivity."];
  Node48 -> Node284 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node284 [label="itk::ConnectedComponentImage\lFilter\< TInputImage, TOutputImage,\l TMaskImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ConnectedComponentImageFilter.html",tooltip="Label the objects in a binary image."];
  Node48 -> Node285 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node285 [label="itk::ConnectedThresholdImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ConnectedThresholdImageFilter.html",tooltip="Label pixels that are connected to a seed and lie within a range of values."];
  Node48 -> Node286 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node286 [label="itk::DanielssonDistanceMap\lImageFilter\< TInputImage,\l TOutputImage, TVoronoiImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1DanielssonDistanceMapImageFilter.html",tooltip="This filter computes the distance map of the input image as an approximation with pixel accuracy to t..."];
  Node48 -> Node287 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node287 [label="itk::DerivativeImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1DerivativeImageFilter.html",tooltip="Computes the directional derivative of an image. The directional derivative at each pixel location is..."];
  Node48 -> Node288 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node288 [label="itk::DiscreteGaussianDerivative\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1DiscreteGaussianDerivativeImageFilter.html",tooltip="Calculates image derivatives using discrete derivative gaussian kernels. This filter calculates Gauss..."];
  Node48 -> Node289 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node289 [label="itk::DoubleThresholdImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1DoubleThresholdImageFilter.html",tooltip="Binarize an input image using double thresholding."];
  Node48 -> Node290 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node290 [label="itk::ExpandImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ExpandImageFilter.html",tooltip="Expand the size of an image by an integer factor in each dimension."];
  Node48 -> Node291 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node291 [label="itk::ExponentialDisplacement\lFieldImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ExponentialDisplacementFieldImageFilter.html",tooltip="Computes a diffeomorphic displacement field as the Lie group exponential of a vector field."];
  Node48 -> Node292 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node292 [label="itk::FastChamferDistance\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1FastChamferDistanceImageFilter.html",tooltip="This class compute the signed (positive and negative) chamfer distance in a narrow band."];
  Node48 -> Node293 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node293 [label="itk::GPUImageToImageFilter\l\< TInputImage, TOutputImage,\l TParentImageFilter \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GPUImageToImageFilter.html",tooltip="class to abstract the behaviour of the GPU filters."];
  Node48 -> Node294 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node294 [label="itk::GradientMagnitudeImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GradientMagnitudeImageFilter.html",tooltip="Computes the gradient magnitude of an image region at each pixel."];
  Node48 -> Node295 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node295 [label="itk::GradientVectorFlowImage\lFilter\< TInputImage, TOutputImage,\l TInternalPixel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GradientVectorFlowImageFilter.html",tooltip="This class computes a diffusion of the gradient vectors for graylevel or binary edge map derive from ..."];
  Node48 -> Node296 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node296 [label="itk::GrayscaleConnectedClosing\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GrayscaleConnectedClosingImageFilter.html",tooltip="Enhance pixels associated with a dark object (identified by a seed pixel) where the dark object is su..."];
  Node48 -> Node297 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node297 [label="itk::GrayscaleConnectedOpening\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GrayscaleConnectedOpeningImageFilter.html",tooltip="Enhance pixels associated with a bright object (identified by a seed pixel) where the bright object i..."];
  Node48 -> Node298 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node298 [label="itk::GrayscaleFillholeImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GrayscaleFillholeImageFilter.html",tooltip="Remove local minima not connected to the boundary of the image."];
  Node48 -> Node299 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node299 [label="itk::GrayscaleGeodesicDilate\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GrayscaleGeodesicDilateImageFilter.html",tooltip="Geodesic grayscale dilation of an image."];
  Node48 -> Node300 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node300 [label="itk::GrayscaleGeodesicErode\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GrayscaleGeodesicErodeImageFilter.html",tooltip="geodesic gray scale erosion of an image"];
  Node48 -> Node301 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node301 [label="itk::GrayscaleGrindPeakImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GrayscaleGrindPeakImageFilter.html",tooltip="Remove local maxima not connected to the boundary of the image."];
  Node48 -> Node302 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node302 [label="itk::HConcaveImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1HConcaveImageFilter.html",tooltip="Identify local minima whose depth below the baseline is greater than h."];
  Node48 -> Node303 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node303 [label="itk::HConvexImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1HConvexImageFilter.html",tooltip="Identify local maxima whose height above the baseline is greater than h."];
  Node48 -> Node304 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node304 [label="itk::HMaximaImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1HMaximaImageFilter.html",tooltip="Suppress local maxima whose height above the baseline is less than h."];
  Node48 -> Node305 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node305 [label="itk::HMinimaImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1HMinimaImageFilter.html",tooltip="Suppress local minima whose depth below the baseline is less than h."];
  Node48 -> Node306 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node306 [label="itk::HardConnectedComponent\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1HardConnectedComponentImageFilter.html",tooltip=" "];
  Node48 -> Node307 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node307 [label="itk::HessianToObjectness\lMeasureImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1HessianToObjectnessMeasureImageFilter.html",tooltip="A filter to enhance M-dimensional objects in N-dimensional images."];
  Node48 -> Node308 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node308 [label="itk::HistogramMatchingImage\lFilter\< TInputImage, TOutputImage,\l THistogramMeasurement \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1HistogramMatchingImageFilter.html",tooltip="Normalize the grayscale values for a source image by matching the shape of the source image histogram..."];
  Node48 -> Node309 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node309 [label="itk::HistogramThresholdImage\lFilter\< TInputImage, TOutputImage,\l TMaskImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1HistogramThresholdImageFilter.html",tooltip="Threshold an image using a HistogramThresholdCalculator."];
  Node48 -> Node310 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node310 [label="itk::ImageAndPathToImage\lFilter\< TInputImage, TInputPath,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageAndPathToImageFilter.html",tooltip="Base class for filters that take both a path and an image as input and produce a path as output."];
  Node48 -> Node311 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node311 [label="itk::InterpolateImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1InterpolateImageFilter.html",tooltip="Interpolate an image from two N-D images."];
  Node48 -> Node312 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node312 [label="itk::InterpolateImagePoints\lFilter\< TInputImage, TOutputImage,\l TCoordType, InterpolatorType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1InterpolateImagePointsFilter.html",tooltip="Resamples an image at the coordinates specified by the user."];
  Node48 -> Node313 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node313 [label="itk::InverseDisplacement\lFieldImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1InverseDisplacementFieldImageFilter.html",tooltip="Computes the inverse of a displacement field."];
  Node48 -> Node314 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node314 [label="itk::IsoContourDistanceImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1IsoContourDistanceImageFilter.html",tooltip="Compute an approximate distance from an interpolated isocontour to the close grid points."];
  Node48 -> Node315 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node315 [label="itk::IsolatedConnectedImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1IsolatedConnectedImageFilter.html",tooltip="Label pixels that are connected to one set of seeds but not another."];
  Node48 -> Node316 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node316 [label="itk::IsolatedWatershedImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1IsolatedWatershedImageFilter.html",tooltip="Isolate watershed basins using two seeds."];
  Node48 -> Node317 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node317 [label="itk::IterativeInverseDisplacement\lFieldImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1IterativeInverseDisplacementFieldImageFilter.html",tooltip="Computes the inverse of a displacement field."];
  Node48 -> Node318 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node318 [label="itk::JoinSeriesImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1JoinSeriesImageFilter.html",tooltip="Join N-D images into an (N+1)-D image."];
  Node48 -> Node319 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node319 [label="itk::LabelMapFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1LabelMapFilter.html",tooltip="Base class for filters that take an image as input and overwrite that image as the output."];
  Node48 -> Node324 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node324 [label="itk::LabelMapToAttribute\lImageFilter\< TInputImage,\l TOutputImage, TAttributeAccessor \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LabelMapToAttributeImageFilter.html",tooltip="Convert a LabelMap to a labeled image."];
  Node48 -> Node325 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node325 [label="itk::LaplacianImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LaplacianImageFilter.html",tooltip="This filter computes the Laplacian of a scalar-valued image."];
  Node48 -> Node326 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node326 [label="itk::LaplacianSharpening\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LaplacianSharpeningImageFilter.html",tooltip="This filter sharpens an image using a Laplacian. LaplacianSharpening highlights regions of rapid inte..."];
  Node48 -> Node327 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node327 [label="itk::LevelSetDomainMapImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LevelSetDomainMapImageFilter.html",tooltip=" "];
  Node48 -> Node328 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node328 [label="itk::MRIBiasFieldCorrection\lFilter\< TInputImage, TOutputImage,\l TMaskImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1MRIBiasFieldCorrectionFilter.html",tooltip="Corrects 3D MRI bias field."];
  Node48 -> Node329 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node329 [label="itk::MaskedFFTNormalized\lCorrelationImageFilter\l\< TInputImage, TOutputImage,\l TMaskImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1MaskedFFTNormalizedCorrelationImageFilter.html",tooltip="Calculate masked normalized cross correlation using FFTs."];
  Node48 -> Node331 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node331 [label="itk::MorphologicalWatershed\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1MorphologicalWatershedImageFilter.html",tooltip="Watershed segmentation implementation with morphological operators."];
  Node48 -> Node332 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node332 [label="itk::MultiResolutionPyramid\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1MultiResolutionPyramidImageFilter.html",tooltip="Framework for creating images in a multi-resolution pyramid."];
  Node48 -> Node334 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node334 [label="itk::NeighborhoodConnected\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1NeighborhoodConnectedImageFilter.html",tooltip="Label pixels that are connected to a seed and lie within a neighborhood."];
  Node48 -> Node335 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node335 [label="itk::NeighborhoodOperator\lImageFilter\< TInputImage,\l TOutputImage, TOperatorValueType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1NeighborhoodOperatorImageFilter.html",tooltip="Applies a single NeighborhoodOperator to an image region."];
  Node48 -> Node336 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node336 [label="itk::NormalizeImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1NormalizeImageFilter.html",tooltip="Normalize an image by setting its mean to zero and variance to one."];
  Node48 -> Node337 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node337 [label="itk::NormalizeToConstant\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1NormalizeToConstantImageFilter.html",tooltip="Scales image pixel intensities to make the sum of all pixels equal a user-defined constant."];
  Node48 -> Node338 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node338 [label="itk::ObjectMorphologyImage\lFilter\< TInputImage, TOutputImage,\l TKernel \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1ObjectMorphologyImageFilter.html",tooltip="Base class for the morphological operations being applied to isolated objects in an image."];
  Node48 -> Node341 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node341 [label="itk::OpeningByReconstruction\lImageFilter\< TInputImage,\l TOutputImage, TKernel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1OpeningByReconstructionImageFilter.html",tooltip="Opening by reconstruction of an image."];
  Node48 -> Node342 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node342 [label="itk::OrientImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1OrientImageFilter.html",tooltip="Permute axes and then flip images as needed to obtain agreement in coordinateOrientation codes."];
  Node48 -> Node343 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node343 [label="itk::OtsuMultipleThresholds\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1OtsuMultipleThresholdsImageFilter.html",tooltip="Threshold an image using multiple Otsu Thresholds."];
  Node48 -> Node344 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node344 [label="itk::PadImageFilterBase\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1PadImageFilterBase.html",tooltip="Increase the image size by padding. Superclass for filters that fill in extra pixels."];
  Node48 -> Node350 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node350 [label="itk::PatchBasedDenoising\lBaseImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1PatchBasedDenoisingBaseImageFilter.html",tooltip="Base class for patch-based denoising algorithms."];
  Node48 -> Node352 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node352 [label="itk::PolylineMask2DImage\lFilter\< TInputImage, TPolyline,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1PolylineMask2DImageFilter.html",tooltip="Implements 2D image masking operation constrained by a contour."];
  Node48 -> Node353 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node353 [label="itk::PolylineMaskImageFilter\l\< TInputImage, TPolyline,\l TVector, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1PolylineMaskImageFilter.html",tooltip="Implements image masking operation constrained by a polyline on a plane perpendicular to certain view..."];
  Node48 -> Node354 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node354 [label="itk::ProjectionImageFilter\l\< TInputImage, TOutputImage,\l TAccumulator \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ProjectionImageFilter.html",tooltip="Implements an accumulation of an image along a selected direction."];
  Node48 -> Node355 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node355 [label="itk::ReconstructionImage\lFilter\< TInputImage, TOutput\lImage, TCompare \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ReconstructionImageFilter.html",tooltip="Performs a grayscale geodesic reconstruction – for performance comparison with GrayscaleGeodesicDilat..."];
  Node48 -> Node356 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node356 [label="itk::RegionGrowImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1RegionGrowImageFilter.html",tooltip="Base class for RegionGrowImageFilter object."];
  Node48 -> Node358 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node358 [label="itk::RegionOfInterestImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1RegionOfInterestImageFilter.html",tooltip="Extract a region of interest from the input image."];
  Node48 -> Node359 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node359 [label="itk::RegionalMaximaImage\lFilter\< TInputImage, TOutput\lImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1RegionalMaximaImageFilter.html",tooltip="Produce a binary image where foreground is the regional maxima of the input image."];
  Node48 -> Node360 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 [label="itk::RegionalMinimaImage\lFilter\< TInputImage, TOutput\lImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1RegionalMinimaImageFilter.html",tooltip="Produce a binary image where foreground is the regional minima of the input image."];
  Node48 -> Node361 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node361 [label="itk::ResampleImageFilter\l\< TInputImage, TOutputImage,\l TInterpolatorPrecisionType,\l TTransformPrecisionType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ResampleImageFilter.html",tooltip="Resample an image via a coordinate transform."];
  Node48 -> Node362 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node362 [label="itk::SLICImageFilter\l\< TInputImage, TOutputImage,\l TDistancePixel \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SLICImageFilter.html",tooltip="Simple Linear Iterative Clustering (SLIC) super-pixel segmentation."];
  Node48 -> Node363 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node363 [label="itk::STAPLEImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1STAPLEImageFilter.html",tooltip="The STAPLE filter implements the Simultaneous Truth and Performance Level Estimation algorithm for ge..."];
  Node48 -> Node364 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node364 [label="itk::ScalarToRGBColormap\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ScalarToRGBColormapImageFilter.html",tooltip="Implements pixel-wise intensity->rgb mapping operation on one image."];
  Node48 -> Node365 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node365 [label="itk::ShiftScaleImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ShiftScaleImageFilter.html",tooltip="Shift and scale the pixels in an image."];
  Node48 -> Node366 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node366 [label="itk::ShrinkImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ShrinkImageFilter.html",tooltip="Reduce the size of an image by an integer factor in each dimension."];
  Node48 -> Node367 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node367 [label="itk::SignedDanielssonDistance\lMapImageFilter\< TInputImage,\l TOutputImage, TVoronoiImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SignedDanielssonDistanceMapImageFilter.html",tooltip="This filter computes the signed distance map of the input image as an approximation with pixel accura..."];
  Node48 -> Node368 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node368 [label="itk::SignedMaurerDistance\lMapImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SignedMaurerDistanceMapImageFilter.html",tooltip="This filter calculates the Euclidean distance transform of a binary image in linear time for arbitrar..."];
  Node48 -> Node369 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node369 [label="itk::SliceBySliceImageFilter\l\< TInputImage, TOutputImage,\l TInputFilter, TOutputFilter,\l TInternalInputImage, TInternalOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SliceBySliceImageFilter.html",tooltip="Apply a filter or a pipeline slice by slice on an image."];
  Node48 -> Node370 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node370 [label="itk::SliceImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SliceImageFilter.html",tooltip="Slices an image based on a starting index and a stopping index, and a step size."];
  Node48 -> Node371 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node371 [label="itk::SobelEdgeDetectionImage\lFilter\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SobelEdgeDetectionImageFilter.html",tooltip="A 2D or 3D edge detection using the Sobel operator."];
  Node48 -> Node372 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node372 [label="itk::SpatialFunctionImage\lEvaluatorFilter\< TSpatialFunction,\l TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SpatialFunctionImageEvaluatorFilter.html",tooltip="Evaluates a SpatialFunction onto a source image."];
  Node48 -> Node373 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node373 [label="itk::Statistics::ImageClassifier\lFilter\< TSample, TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Statistics_1_1ImageClassifierFilter.html",tooltip="Image classification class."];
  Node48 -> Node374 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node374 [label="itk::StreamingImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1StreamingImageFilter.html",tooltip="Pipeline object to control data streaming for large data processing."];
  Node48 -> Node375 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node375 [label="itk::Testing::Comparison\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Testing_1_1ComparisonImageFilter.html",tooltip="Implements comparison between two images."];
  Node48 -> Node376 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node376 [label="itk::TileImageFilter\l\< TInputImage, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1TileImageFilter.html",tooltip="Tile multiple input images into a single output image."];
  Node48 -> Node377 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node377 [label="itk::ValuedRegionalExtrema\lImageFilter\< TInputImage,\l TOutputImage, TFunction1,\l TFunction2 \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ValuedRegionalExtremaImageFilter.html",tooltip="Uses a flooding algorithm to set all voxels that are not a regional extrema to the max or min of the ..."];
  Node48 -> Node378 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node378 [label="itk::VectorConfidenceConnected\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1VectorConfidenceConnectedImageFilter.html",tooltip="Segment pixels with similar statistics using connectivity."];
  Node48 -> Node379 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node379 [label="itk::VectorNeighborhoodOperator\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1VectorNeighborhoodOperatorImageFilter.html",tooltip="Applies a single scalar NeighborhoodOperator to an itk::Vector image region."];
  Node48 -> Node380 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node380 [label="itk::VoronoiSegmentation\lImageFilterBase\< TInputImage,\l TOutputImage, TBinaryPriorImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1VoronoiSegmentationImageFilterBase.html",tooltip="Base class for VoronoiSegmentationImageFilter."];
  Node1 -> Node389 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node389 [label="itk::LandmarkDisplacement\lFieldSource\< TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LandmarkDisplacementFieldSource.html",tooltip="Computes a displacement field from two sets of landmarks."];
  Node1 -> Node390 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node390 [label="itk::PathToImageFilter\l\< TInputPath, TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1PathToImageFilter.html",tooltip="Base class for filters that take a Path as input and produce an image as output. Base class for filte..."];
  Node1 -> Node391 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node391 [label="itk::PointSetToImageFilter\l\< TInputPointSet, TOutputImage \>",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classitk_1_1PointSetToImageFilter.html",tooltip="Base class for filters that take a PointSet as input and produce an image as output...."];
  Node1 -> Node393 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node393 [label="itk::RandomImageSource\l\< TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1RandomImageSource.html",tooltip="Generate an n-dimensional image of random pixel values."];
  Node1 -> Node394 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node394 [label="itk::SpatialObjectToImage\lFilter\< TInputSpatialObject,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SpatialObjectToImageFilter.html",tooltip="Base class for filters that take a SpatialObject as input and produce an image as output...."];
  Node1 -> Node395 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node395 [label="itk::Testing::ExtractSlice\lImageFilter\< TInputImage,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Testing_1_1ExtractSliceImageFilter.html",tooltip="Decrease the image size by cropping the image to the selected region bounds."];
  Node1 -> Node396 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node396 [label="itk::TransformToDisplacement\lFieldFilter\< TOutputImage,\l TParametersValueType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1TransformToDisplacementFieldFilter.html",tooltip="Generate a displacement field from a coordinate transform."];
  Node1 -> Node397 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node397 [label="itk::TriangleMeshToBinary\lImageFilter\< TInputMesh,\l TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1TriangleMeshToBinaryImageFilter.html",tooltip="3D Rasterization algorithm Courtesy of Dr David Gobbi of Atamai Inc."];
  Node1 -> Node398 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node398 [label="itk::VTKImageImport\l\< TOutputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1VTKImageImport.html",tooltip="Connect the end of an VTK pipeline to an ITK image pipeline."];
}
