digraph "itk::PatchBasedDenoisingImageFilter&lt; TInputImage, TOutputImage &gt;::ThreadDataStruct"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="itk::PatchBasedDenoising\lImageFilter\< TInputImage,\l TOutputImage \>::ThreadDataStruct",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" validDerivatives\nvalidNorms" ,fontname="Helvetica"];
  Node2 [label="itk::Array\< unsigned\l short \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Array.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="vnl_vector\< unsigned\l short \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" entropyFirstDerivative\nentropySecondDerivative\nmaxNorm\nminNorm" ,fontname="Helvetica"];
  Node4 [label="itk::Array\< RealValueType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Array.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="vnl_vector\< RealValueType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" sampler" ,fontname="Helvetica"];
  Node6 [label="itk::SmartPointer\<\l Self \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SmartPointer.html",tooltip=" "];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" eigenValsCache" ,fontname="Helvetica"];
  Node7 [label="std::vector\< EigenValues\lArrayType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node8 [label="itk::FixedArray\< TValue,\l VLength \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1FixedArray.html",tooltip="Simulate a standard C array with copy semantics."];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" eigenVecsCache" ,fontname="Helvetica"];
  Node9 [label="std::vector\< EigenVectors\lMatrixType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node10 [label="itk::Matrix\< T, VRows,\l VColumns \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Matrix.html",tooltip="A templated class holding a M x N size Matrix."];
}
