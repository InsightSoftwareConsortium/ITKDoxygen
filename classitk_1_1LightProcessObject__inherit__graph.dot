digraph "itk::LightProcessObject"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="itk::LightProcessObject",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="LightProcessObject is the base class for all process objects (source, filters, mappers) in the Insigh..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="itk::Object",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Object.html",tooltip="Base class for most ITK classes."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="itk::LightObject",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LightObject.html",tooltip="Light weight base class for most itk classes."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="itk::ClassifierBase\l\< TInputImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ClassifierBase.html",tooltip=" "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="itk::ImageClassifierBase\l\< TInputImage, TClassifiedImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageClassifierBase.html",tooltip="Base class for the ImageClassifierBase object."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="itk::TransformIOBaseTemplate\l\< ParametersValueType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1TransformIOBaseTemplate.html",tooltip=" "];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="itk::MatlabTransformIOTemplate\l\< ParametersValueType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1MatlabTransformIOTemplate.html",tooltip="Create instances of MatlabTransformIOTemplate objects."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="itk::XMLWriterBase\l\< GroupSpatialObject\l\< 3 \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1XMLWriterBase.html",tooltip=" "];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="itk::PolygonGroupSpatial\lObjectXMLFileWriter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1PolygonGroupSpatialObjectXMLFileWriter.html",tooltip=" "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="itk::CSVFileReaderBase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1CSVFileReaderBase.html",tooltip="A base class that contains common methods used for parsing csv files."];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="itk::CSVArray2DFileReader\l\< TData \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1CSVArray2DFileReader.html",tooltip="Parses csv files and stores the data in a itkCSVArray2DDataObject."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="itk::CSVNumericObjectFile\lWriter\< TValue, VRows,\l VColumns \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1CSVNumericObjectFileWriter.html",tooltip="Writes out numeric itk data objects to a csv file."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="itk::ClassifierBase\l\< TDataContainer \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ClassifierBase.html",tooltip="Base class for classifier objects."];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="itk::ImageIOBase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageIOBase.html",tooltip="Abstract superclass defines image IO interface."];
  Node14 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="itk::BMPImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1BMPImageIO.html",tooltip="Read BMPImage file format."];
  Node14 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="itk::BioRadImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1BioRadImageIO.html",tooltip="ImageIO class for reading Bio-Rad images. Bio-Rad file format are used by confocal microscopes like M..."];
  Node14 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="itk::Bruker2dseqImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Bruker2dseqImageIO.html",tooltip="Class that defines how to read Bruker file format."];
  Node14 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="itk::GDCMImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GDCMImageIO.html",tooltip="ImageIO class for reading and writing DICOM V3.0 and ACR/NEMA 1&2 uncompressed images...."];
  Node14 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="itk::GiplImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GiplImageIO.html",tooltip="Read GiplImage file format."];
  Node14 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="itk::IPLCommonImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1IPLCommonImageIO.html",tooltip="Class that defines how to read GE4 file format."];
  Node20 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="itk::GE4ImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GE4ImageIO.html",tooltip="Class that defines how to read GE4 file format."];
  Node20 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="itk::GE5ImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GE5ImageIO.html",tooltip="Class that defines how to read GE5 file format."];
  Node20 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="itk::GEAdwImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GEAdwImageIO.html",tooltip="Class that defines how to read GEAdw file format."];
  Node20 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="itk::SiemensVisionImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1SiemensVisionImageIO.html",tooltip="Class that defines how to read SiemensVision file format."];
  Node14 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="itk::JPEGImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1JPEGImageIO.html",tooltip="ImageIO object for reading and writing JPEG images."];
  Node14 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="itk::MINCImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1MINCImageIO.html",tooltip="Class that defines how to read MINC file format."];
  Node14 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="itk::MetaImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1MetaImageIO.html",tooltip="Read MetaImage file format."];
  Node14 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="itk::NiftiImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1NiftiImageIO.html",tooltip="Class that defines how to read Nifti file format. Nifti IMAGE FILE FORMAT - As much information as I ..."];
  Node14 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="itk::NrrdImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1NrrdImageIO.html",tooltip="Read and write the \"Nearly Raw Raster Data\" (Nrrd) image format. The Nrrd format was developed as par..."];
  Node14 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="itk::PNGImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1PNGImageIO.html",tooltip="ImageIO object for reading and writing PNG images."];
  Node14 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="itk::RawImageIO\< TPixel,\l VImageDimension \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1RawImageIO.html",tooltip="Read and write raw binary images."];
  Node14 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="itk::StimulateImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1StimulateImageIO.html",tooltip="ImageIO class for reading SDT/SPR (Stimulate) images This format is similar to a MetaImageIO file: Th..."];
  Node14 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="itk::StreamingImageIOBase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1StreamingImageIOBase.html",tooltip="A base class for specific ImageIO file formats which support streaming."];
  Node33 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="itk::HDF5ImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1HDF5ImageIO.html",tooltip="Class that defines how to read HDF5 file format. HDF5 IMAGE FILE FORMAT - As much information as I ca..."];
  Node33 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="itk::JPEG2000ImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1JPEG2000ImageIO.html",tooltip="Supports for the JPEG2000 file format based on openjpeg."];
  Node33 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="itk::MRCImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1MRCImageIO.html",tooltip="An ImageIO class to read the MRC file format. The MRC file format frequently has the extension \"...."];
  Node33 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="itk::VTKImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1VTKImageIO.html",tooltip="ImageIO class for reading VTK images."];
  Node14 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="itk::TIFFImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1TIFFImageIO.html",tooltip="ImageIO object for reading and writing TIFF images."];
  Node38 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="itk::LSMImageIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LSMImageIO.html",tooltip="ImageIO class for reading LSM (Zeiss) images LSM is a line of confocal laser scanning microscopes pro..."];
  Node14 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="itk::VideoIOBase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1VideoIOBase.html",tooltip="Abstract superclass defines video IO interface."];
  Node40 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="itk::FileListVideoIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1FileListVideoIO.html",tooltip="VideoIO object for reading and writing videos as a sequence of frame files."];
  Node1 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="itk::ImageModelEstimator\lBase\< TInputImage, TMembership\lFunction \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageModelEstimatorBase.html",tooltip="Base class for model estimation from images used for classification."];
  Node42 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="itk::ImageGaussianModelEstimator\l\< TInputImage, TMembershipFunction,\l TTrainingImage \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageGaussianModelEstimator.html",tooltip="Base class for ImageGaussianModelEstimator object."];
  Node42 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="itk::ImageKmeansModelEstimator\l\< TInputImage, TMembershipFunction \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageKmeansModelEstimator.html",tooltip="Base class for ImageKmeansModelEstimator object."];
  Node1 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="itk::LevelSetNeighborhood\lExtractor\< TLevelSet \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LevelSetNeighborhoodExtractor.html",tooltip="Locate pixels of a particular level set."];
  Node45 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="itk::LevelSetVelocityNeighborhood\lExtractor\< TLevelSet, TAuxValue,\l VAuxDimension \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LevelSetVelocityNeighborhoodExtractor.html",tooltip="Locate pixels of a particular level set."];
  Node1 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="itk::MeshIOBase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1MeshIOBase.html",tooltip="Abstract superclass defines mesh IO interface."];
  Node47 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="itk::BYUMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1BYUMeshIO.html",tooltip="This class defines how to read and write BYU Geometry File Format."];
  Node47 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="itk::FreeSurferAsciiMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1FreeSurferAsciiMeshIO.html",tooltip="This class defines how to read and write freesurfer ASCII surface format. To use IO factory,..."];
  Node47 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="itk::FreeSurferBinaryMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1FreeSurferBinaryMeshIO.html",tooltip="This class defines how to read Freesurfer binary surface file format. To use IO factory,..."];
  Node47 -> Node51 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="itk::GiftiMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GiftiMeshIO.html",tooltip="This class defines how to read and write Gifti file format."];
  Node47 -> Node52 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="itk::OBJMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1OBJMeshIO.html",tooltip="This class defines how to read and write Object file format."];
  Node47 -> Node53 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="itk::OFFMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1OFFMeshIO.html",tooltip="this class defines how to read and write Object file format."];
  Node47 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 [label="itk::VTKPolyDataMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1VTKPolyDataMeshIO.html",tooltip="This class defines how to read and write vtk legacy file format."];
  Node1 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="itk::MetaArrayReader",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1MetaArrayReader.html",tooltip=" "];
  Node1 -> Node56 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="itk::MetaArrayWriter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1MetaArrayWriter.html",tooltip=" "];
  Node1 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node57 [label="itk::TransformFileReader\lTemplate\< TParametersValueType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1TransformFileReaderTemplate.html",tooltip="TODO."];
  Node1 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="itk::TransformFileWriter\lTemplate\< TParametersValueType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1TransformFileWriterTemplate.html",tooltip="TODO."];
  Node1 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="itk::TransformIOBaseTemplate\l\< TParametersValueType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1TransformIOBaseTemplate.html",tooltip="Abstract superclass defining the Transform IO interface."];
  Node59 -> Node60 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 [label="itk::HDF5TransformIOTemplate\l\< TParametersValueType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1HDF5TransformIOTemplate.html",tooltip="Read&Write transforms in HDF5 Format."];
  Node59 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="itk::TxtTransformIOTemplate\l\< TParametersValueType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1TxtTransformIOTemplate.html",tooltip="Create instances of TxtTransformIOTemplate objects."];
  Node1 -> Node62 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 [label="itk::XMLReaderBase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1XMLReaderBase.html",tooltip=" "];
  Node62 -> Node63 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node63 [label="itk::XMLReader\< GroupSpatial\lObject\< 3 \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1XMLReader.html",tooltip=" "];
  Node63 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 [label="itk::PolygonGroupSpatial\lObjectXMLFileReader",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1PolygonGroupSpatialObjectXMLFileReader.html",tooltip=" "];
  Node62 -> Node65 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node65 [label="itk::XMLReader\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1XMLReader.html",tooltip="template base class for an XMLReader Its purpose really is just to define the simple interface for ex..."];
  Node1 -> Node66 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node66 [label="itk::XMLWriterBase\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1XMLWriterBase.html",tooltip=" "];
}
