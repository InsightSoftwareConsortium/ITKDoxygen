digraph "itk::Statistics::ImageToNeighborhoodSampleAdaptor&lt; TImage, TBoundaryCondition &gt;::Iterator"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="itk::Statistics::ImageTo\lNeighborhoodSampleAdaptor\l\< TImage, TBoundaryCondition\l \>::Iterator",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Iterator."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="itk::Statistics::ImageTo\lNeighborhoodSampleAdaptor\l\< TImage, TBoundaryCondition\l \>::ConstIterator",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Statistics_1_1ImageToNeighborhoodSampleAdaptor_1_1ConstIterator.html",tooltip="Const Iterator."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_MeasurementVectorCache" ,fontname="Helvetica"];
  Node3 [label="std::vector\< ConstNeighborhood\lIterator\< TImage, TBoundaryCondition \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node4 [label="itk::ConstNeighborhoodIterator\l\< TImage, TBoundaryCondition \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ConstNeighborhoodIterator.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="itk::Neighborhood\<\l TImage::InternalPixelType\l *, TImage::ImageDimension \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Neighborhood.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Radius\nm_Size" ,fontname="Helvetica"];
  Node6 [label="itk::Size\< VDimension \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structitk_1_1Size.html",tooltip=" "];
  Node7 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_DataBuffer" ,fontname="Helvetica"];
  Node7 [label="itk::NeighborhoodAllocator\l\< TImage::InternalPixelType * \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1NeighborhoodAllocator.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_Data" ,fontname="Helvetica"];
  Node8 [label="std::unique_ptr\< TImage\l::InternalPixelType *[]\>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_OffsetTable" ,fontname="Helvetica"];
  Node9 [label="std::vector\< itk::Offset \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="Helvetica"];
  Node10 [label="itk::Offset\< VDimension \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structitk_1_1Offset.html",tooltip="Represent a n-dimensional offset between two n-dimensional indexes of n-dimensional image."];
  Node11 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_BeginIndex\nm_Bound\nm_EndIndex\nm_InnerBoundsHigh\nm_InnerBoundsLow\nm_Loop" ,fontname="Helvetica"];
  Node11 [label="itk::Index\< Self::Dimension \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structitk_1_1Index.html",tooltip=" "];
  Node12 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" m_BoundaryCondition" ,fontname="Helvetica"];
  Node12 [label="itk::ImageBoundaryCondition\l\< ImageType, OutputImageType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1ImageBoundaryCondition.html",tooltip=" "];
}
