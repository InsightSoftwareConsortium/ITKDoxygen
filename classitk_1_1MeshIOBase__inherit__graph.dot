digraph "itk::MeshIOBase"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="itk::MeshIOBase",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Abstract superclass defines mesh IO interface."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="itk::LightProcessObject",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LightProcessObject.html",tooltip="LightProcessObject is the base class for all process objects (source, filters, mappers) in the Insigh..."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="itk::Object",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1Object.html",tooltip="Base class for most ITK classes."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="itk::LightObject",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1LightObject.html",tooltip="Light weight base class for most itk classes."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="itk::BYUMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1BYUMeshIO.html",tooltip="This class defines how to read and write BYU Geometry File Format."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="itk::FreeSurferAsciiMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1FreeSurferAsciiMeshIO.html",tooltip="This class defines how to read and write freesurfer ASCII surface format. To use IO factory,..."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="itk::FreeSurferBinaryMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1FreeSurferBinaryMeshIO.html",tooltip="This class defines how to read Freesurfer binary surface file format. To use IO factory,..."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="itk::GiftiMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1GiftiMeshIO.html",tooltip="This class defines how to read and write Gifti file format."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="itk::OBJMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1OBJMeshIO.html",tooltip="This class defines how to read and write Object file format."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="itk::OFFMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1OFFMeshIO.html",tooltip="this class defines how to read and write Object file format."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="itk::VTKPolyDataMeshIO",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classitk_1_1VTKPolyDataMeshIO.html",tooltip="This class defines how to read and write vtk legacy file format."];
}
